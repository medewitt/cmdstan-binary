# NOTE: This workflow is overkill for most R packages
# check-standard.yaml is likely a better choice
# usethis::use_github_action("check-standard") will install it.
#
# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main 
jobs:
    R-CMD-check:
      runs-on: ${{ matrix.config.os }}
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
        CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        RSPM: ${{ matrix.config.rspm }}
  
      name: ${{ matrix.config.os }} (${{ matrix.config.r }})
  
      strategy:
        fail-fast: false
        max-parallel: 1
        matrix:
          config:
            - {os: macOS-latest,   r: 'release'}
            - {os: windows-latest, r: 'release'}
            - {os: ubuntu-20.04,   r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
  
      steps:
        - name: cmdstan env vars
          run: |
            echo "CMDSTAN_PATH=${HOME}/.cmdstanr" >> $GITHUB_ENV
          shell: bash
        - uses: actions/checkout@v2
  
        - uses: r-lib/actions/setup-r@v2
          with:
            r-version: ${{ matrix.config.r }}
            http-user-agent: ${{ matrix.config.http-user-agent }}
  
        - name: Query dependencies
          run: |
            install.packages('remotes')
            saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
            writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
          shell: Rscript {0}
  
        - name: Restore R package cache
          if: runner.os != 'Windows'
          uses: actions/cache@v2
          with:
            path: ${{ env.R_LIBS_USER }}
            key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
            restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
  
        - name: Install system dependencies
          if: runner.os == 'Linux'
          run: |
            while read -r cmd
            do
              eval sudo $cmd
            done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
        - name: Set path for RTools 4.3
          if: runner.os == 'Windows'
          run: echo "C:/rtools43/usr/bin;C:/rtools43/ucrt64/bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
  
        - name: Install mingw32-make and check toolchain path
          if: runner.os == 'Windows'
          run: |
            pacman -Syu mingw-w64-x86_64-make --noconfirm
            g++ --version
            Get-Command g++ | Select-Object -ExpandProperty Definition
            mingw32-make --version
            Get-Command mingw32-make | Select-Object -ExpandProperty Definition
          shell: powershell
  
        - name: Install dependencies
          run: |
            remotes::install_deps(dependencies = TRUE)
            remotes::install_cran("rcmdcheck")
            remotes::install_github('stan-dev/cmdstanr')
            cmdstanr::install_cmdstan()
          shell: Rscript {0}
  
        - name: Session info
          run: |
            options(width = 100)
            pkgs <- installed.packages()[, "Package"]
            sessioninfo::session_info(pkgs, include_base = TRUE)
          shell: Rscript {0}
  
  
        - name: Compile models on the platform
          run: |-
            Rscript -e "source('model.R')"
        - name: Commit results
          run: |
            git config --local user.email "me.dewitt.jr@gmail.com"
            git config --local user.name "Michael DeWitt"
            git add .
            git commit -m "Update the latest data" -a || echo "No changes to commit"
            git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo "No changes to commit"
